print ("Hello, and welcome to Splandor!")

colors = "W", "U", "G", "R", "B"

# color, points, white, blue, green, red, black
tier1Deck = [
(0, 0, 1, 1, 1, 1, 0),
(0, 0, 1, 2, 1, 1, 0),
(0, 0, 2, 2, 0, 1, 0),
(0, 0, 0, 0, 1, 3, 1),
(0, 0, 0, 0, 2, 1, 0),
(0, 0, 2, 0, 2, 0, 0),
(0, 0, 0, 0, 3, 0, 0),
(0, 1, 0, 4, 0, 0, 0),

(1, 0, 1, 0, 1, 1, 1),
(1, 0, 1, 0, 1, 2, 1),
(1, 0, 1, 0, 2, 2, 0),
(1, 0, 0, 1, 3, 1, 0),
(1, 0, 1, 0, 0, 0, 2),
(1, 0, 0, 0, 2, 0, 2),
(1, 0, 0, 0, 0, 0, 3),
(1, 1, 0, 0, 0, 4, 0),

(2, 0, 0, 1, 1, 1, 1),
(2, 0, 0, 1, 2, 1, 1),
(2, 0, 0, 2, 2, 0, 1),
(2, 0, 3, 1, 0, 0, 1),
(2, 0, 0, 0, 0, 2, 1),
(2, 0, 0, 2, 0, 0, 2),
(2, 0, 0, 3, 0, 0, 0),
(2, 1, 0, 0, 4, 0, 0),

(3, 0, 1, 1, 0, 1, 1),
(3, 0, 1, 1, 0, 1, 2),
(3, 0, 0, 1, 0, 2, 2),
(3, 0, 1, 3, 1, 0, 0),
(3, 0, 2, 1, 0, 0, 0),
(3, 0, 0, 2, 0, 2, 0),
(3, 0, 0, 0, 0, 3, 0),
(3, 1, 0, 0, 0, 0, 0),

(4, 0, 1, 1, 1, 0, 1),
(4, 0, 2, 1, 1, 0, 1),
(4, 0, 2, 0, 1, 0, 2),
(4, 0, 1, 0, 0, 1, 3),
(4, 0, 0, 2, 1, 0, 0),
(4, 0, 2, 0, 0, 2, 0),
(4, 0, 3, 0, 0, 0, 0),
(4, 1, 4, 0, 0, 0, 0)
    ]

tier2Deck = [
(0, 1, 3, 2, 2, 0, 0),
(0, 1, 3, 0, 3, 0, 2),
(0, 2, 0, 1, 4, 2, 0),
(0, 2, 0, 0, 5, 3, 0),
(0, 2, 5, 0, 0, 0, 0),
(0, 3, 0, 0, 0, 0, 6),

(1, 1, 0, 2, 2, 3, 0),
(1, 1, 0, 2, 3, 0, 3),
(1, 2, 5, 3, 0, 0, 0),
(1, 2, 2, 0, 0, 1, 4),
(1, 2, 0, 5, 0, 0, 0),
(1, 3, 0, 6, 0, 0, 0),

(2, 1, 0, 0, 3, 2, 2),
(2, 1, 2, 3, 0, 3, 0),
(2, 2, 0, 0, 1, 4, 2),
(2, 2, 0, 0, 0, 5, 3),
(2, 2, 0, 0, 0, 5, 0),
(2, 3, 6, 0, 0, 0, 0),

(3, 1, 3, 0, 2, 2, 1),
(3, 1, 2, 3, 0, 0, 2),
(3, 2, 4, 2, 0, 0, 2),
(3, 2, 0, 5, 3, 3, 0),
(3, 2, 0, 0, 5, 5, 0),
(3, 3, 0, 0, 6, 6, 0),

(4, 1, 2, 0, 0, 2, 1),
(4, 1, 0, 3, 0, 2, 1),
(4, 2, 1, 4, 2, 0, 2),
(4, 2, 3, 0, 0, 0, 3),
(4, 2, 0, 0, 0, 0, 0),
(4, 3, 0, 0, 0, 6, 0)
    ]

tier3Deck = [
(0, 3, 3, 3, 5, 3, 0),
(0, 4, 0, 0, 0, 7, 0),
(0, 4, 0, 0, 3, 6, 3),
(0, 5, 0, 0, 0, 7, 3),

(1, 3, 3, 0, 3, 3, 5),
(1, 4, 7, 0, 0, 0, 0),
(1, 4, 6, 3, 0, 0, 3),
(1, 5, 7, 3, 0, 0, 0),

(2, 3, 0, 3, 3, 5, 3),
(2, 4, 0, 0, 0, 0, 7),
(2, 4, 3, 0, 0, 3, 6),
(2, 5, 3, 0, 0, 0, 7),

(3, 3, 5, 3, 0, 3, 3),
(3, 4, 0, 7, 0, 0, 0),
(3, 4, 3, 6, 3, 0, 0),
(3, 5, 0, 7, 3, 0, 0),

(4, 3, 3, 5, 3, 0, 3),
(4, 4, 0, 0, 7, 0, 0),
(4, 4, 0, 3, 6, 3, 0),
(4, 5, 0, 0, 7, 3, 0)
    ]

nobles = [
(0, 0, 3, 3, 3),
(3, 3, 3, 0, 0),
(3, 3, 0, 0, 3),
(0, 3, 3, 3, 0),
(3, 0, 0, 3, 3),
(4, 4, 0, 0, 0),
(0, 4, 4, 0, 0),
(0, 0, 4, 4, 0),
(4, 0, 0, 0, 4),
(0, 0, 0, 4, 4)
    ]

class GameState:
    pass

state = GameState()

# white, blue, green, red, black, yellow
state.gemsAvailable = [7, 7, 7, 7, 7, 5]

print ("Tier 1 deck initialized with", len(tier1Deck), "cards")
print ("Tier 2 deck initialized with", len(tier2Deck), "cards")
print ("Tier 3 deck initialized with", len(tier3Deck), "cards")
print ("Noble deck initialized with", len(nobles), "tiles")

numPlayers = 0

while numPlayers < 2 or numPlayers > 5:
    numPlayers = int(input("How many players? (2-5)"))
    if (numPlayers < 2 or numPlayers > 5):
        print("invalid player count:", numPlayers)

players = []

class Player:
    pass

for i in range(2):
    players.append(Player())
